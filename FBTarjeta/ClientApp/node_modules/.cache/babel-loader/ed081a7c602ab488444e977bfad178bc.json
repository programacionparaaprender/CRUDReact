{"ast":null,"code":"//import { Action, Reducer } from 'redux';\nimport axios from 'axios';\n// ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\nexport var actionCreators = {\n  increment: function increment() {\n    return {\n      payload: 'data',\n      type: 'INCREMENT_COUNT'\n    };\n  },\n  decrement: function decrement() {\n    return {\n      type: 'DECREMENT_COUNT'\n    };\n  },\n  addToCart: function addToCart(product) {\n    return {\n      payload: product,\n      type: 'ADD_TO_CART'\n    };\n  },\n  deleteProduct: function deleteProduct(id) {\n    return {\n      id: id,\n      type: 'DELETE_PRODUCT'\n    };\n  },\n  deleteProduct2: function deleteProduct2(id) {\n    return function (dispatch, getState) {\n      axios.delete('api/tarjeta/' + id).then(function (response) {\n        axios.get('api/tarjeta').then(function (response) {\n          // do something with response\n          console.log(response);\n          dispatch({\n            type: 'ADD_TO_CART2',\n            tarjetas: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        dispatch({\n          type: 'ADD_TO_CART2',\n          tarjetas: []\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      dispatch({\n        type: 'ADD_TO_CART2',\n        tarjetas: []\n      });\n    };\n  },\n  addToCart2: function addToCart2(product) {\n    return function (dispatch, getState) {\n      if (product.id == 0) {\n        axios.post('api/tarjeta', product).then(function (response) {\n          axios.get('api/tarjeta').then(function (response) {\n            // do something with response\n            console.log(response);\n            dispatch({\n              type: 'ADD_TO_CART2',\n              tarjetas: response.data\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n          dispatch({\n            type: 'ADD_TO_CART2',\n            tarjetas: []\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        dispatch({\n          type: 'ADD_TO_CART2',\n          tarjetas: []\n        });\n      } else {\n        axios.post('api/tarjeta/' + product.id, product).then(function (response) {\n          axios.get('api/tarjeta').then(function (response) {\n            // do something with response\n            console.log(response);\n            dispatch({\n              type: 'ADD_TO_CART2',\n              tarjetas: response.data\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n          dispatch({\n            type: 'ADD_TO_CART2',\n            tarjetas: []\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        dispatch({\n          type: 'ADD_TO_CART2',\n          tarjetas: []\n        });\n      }\n    };\n  },\n  obtenerTarjetas: function obtenerTarjetas() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tarjetas) {\n        axios.get('api/tarjeta').then(function (response) {\n          // do something with response\n          console.log(response);\n          dispatch({\n            type: 'REQUEST_WEATHER_FORECASTS',\n            tarjetas: response.data\n          });\n        });\n        dispatch({\n          type: 'REQUEST_WEATHER_FORECASTS',\n          tarjetas: []\n        });\n      }\n    };\n  }\n}; // ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nexport var reducer = function reducer(state, incomingAction) {\n  if (state === undefined) {\n    var tarjetas = [{\n      id: 1,\n      titular: \"Carlos Marcano\",\n      numeroTarjeta: \"2626262626262626\",\n      fechaExpiracion: \"12/24\",\n      cvv: \"231\"\n    }, {\n      id: 2,\n      titular: \"Maria Gonzales\",\n      numeroTarjeta: \"2727272727272727\",\n      fechaExpiracion: \"12/23\",\n      cvv: \"233\"\n    }]; //console.log(JSON.stringify(tarjetas))\n\n    return {\n      tarjetas: tarjetas\n    };\n  } //console.log('incomingAction: '+JSON.stringify(incomingAction))\n\n\n  var action = incomingAction;\n\n  switch (action.type) {\n    case 'REQUEST_WEATHER_FORECASTS':\n      return {\n        tarjetas: action.tarjetas\n      };\n      break;\n\n    case 'ADD_TO_CART2':\n      return {\n        tarjetas: action.tarjetas\n      };\n      break;\n\n    case 'DELETE_PRODUCT':\n      action = incomingAction; //let products:Array<Producto>\n\n      var products2 = [];\n\n      for (var y in state.tarjetas) {\n        if (String(state.tarjetas[y].id) !== String(action.id)) products2.push(state.tarjetas[y]);\n      }\n\n      return {\n        tarjetas: products2\n      };\n\n    case 'ADD_TO_CART':\n      action = incomingAction; //let products:Array<Producto>\n\n      var _tarjetas = [];\n\n      for (var x in state.tarjetas) {\n        _tarjetas.push(state.tarjetas[x]);\n      }\n\n      _tarjetas.push({\n        id: action.payload.id,\n        titular: action.payload.titular,\n        numeroTarjeta: action.payload.numeroTarjeta,\n        fechaExpiracion: action.payload.fechaExpiracion,\n        cvv: action.payload.cvv\n      });\n\n      return {\n        tarjetas: _tarjetas\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Bus209/Documents/htdocs/CRUDReact/FBTarjeta/ClientApp/src/store/TarjetaCredito.ts"],"names":["axios","actionCreators","increment","payload","type","decrement","addToCart","product","deleteProduct","id","deleteProduct2","dispatch","getState","delete","then","response","get","console","log","tarjetas","data","catch","error","addToCart2","post","obtenerTarjetas","appState","reducer","state","incomingAction","undefined","titular","numeroTarjeta","fechaExpiracion","cvv","action","products2","y","String","push","x"],"mappings":"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","sourcesContent":["//import { Action, Reducer } from 'redux';\r\nimport axios from 'axios';\r\nimport { Reducer } from 'redux';\r\nimport { TarjetaCredito } from '../models/tarjetacredito'\r\n\r\nimport { AppThunkAction } from './';\r\n\r\n\r\nexport interface WeatherTarjetaState{\r\n    //products:Array<Producto>\r\n    tarjetas:TarjetaCredito[]\r\n}  \r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\ninterface RequestObtenerTarjetaAction {\r\n    type: 'REQUEST_WEATHER_FORECASTS',\r\n    tarjetas:TarjetaCredito[]\r\n}\r\ninterface AnadirTarjetaCreditoAction {\r\n    type: 'ADD_TO_CART2',\r\n    tarjetas:TarjetaCredito[]\r\n}\r\n\r\n\r\nexport interface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\nexport interface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\nexport interface ADD_TO_CART { \r\n    type: 'ADD_TO_CART',\r\n    payload:{\r\n        id: number;\r\n        titular: string;\r\n        numeroTarjeta: string;\r\n        fechaExpiracion: string;\r\n        cvv: string;\r\n    }\r\n}\r\nexport interface DELETE_PRODUCT { \r\n    type: 'DELETE_PRODUCT',\r\n    id: string;\r\n}\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = AnadirTarjetaCreditoAction | RequestObtenerTarjetaAction |IncrementCountAction | DecrementCountAction | ADD_TO_CART | DELETE_PRODUCT;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({ payload:'data',type: 'INCREMENT_COUNT' } as IncrementCountAction),\r\n    decrement: () => ({ type: 'DECREMENT_COUNT' } as DecrementCountAction),\r\n    addToCart: (product:TarjetaCredito) => ({ payload:product,type: 'ADD_TO_CART' } as ADD_TO_CART),  \r\n    deleteProduct: (id: string) => ({ id: id, type: 'DELETE_PRODUCT' } as DELETE_PRODUCT),\r\n    deleteProduct2: (id: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        axios.delete('api/tarjeta/' + id).then(response => {\r\n            axios.get('api/tarjeta').then(response => {\r\n                // do something with response\r\n                console.log(response);\r\n                dispatch({ type: 'ADD_TO_CART2', tarjetas: response.data });\r\n            }).catch(error => { console.log(error) });\r\n            dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n        }).catch(error => { console.log(error) });\r\n        dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n    },\r\n    addToCart2: (product:TarjetaCredito): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        if (product.id == 0) {\r\n            axios.post('api/tarjeta', product).then(response => {\r\n                axios.get('api/tarjeta').then(response => {\r\n                    // do something with response\r\n                    console.log(response);\r\n                    dispatch({ type: 'ADD_TO_CART2', tarjetas: response.data });\r\n                }).catch(error => { console.log(error) });\r\n                dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n            }).catch(error => { console.log(error) });\r\n            dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n        } else {\r\n            axios.post('api/tarjeta/'+product.id, product).then(response => {\r\n                axios.get('api/tarjeta').then(response => {\r\n                    // do something with response\r\n                    console.log(response);\r\n                    dispatch({ type: 'ADD_TO_CART2', tarjetas: response.data });\r\n                }).catch(error => { console.log(error) });\r\n                dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n            }).catch(error => { console.log(error) });\r\n            dispatch({ type: 'ADD_TO_CART2', tarjetas: [] });\r\n        }\r\n    },\r\n    obtenerTarjetas: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tarjetas) {\r\n            axios.get('api/tarjeta').then(response => {\r\n                // do something with response\r\n                console.log(response);\r\n                dispatch({ type: 'REQUEST_WEATHER_FORECASTS', tarjetas: response.data });\r\n            });\r\n            dispatch({ type: 'REQUEST_WEATHER_FORECASTS', tarjetas: [] });\r\n        }\r\n    }\r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\n\r\n\r\nexport const reducer: Reducer<WeatherTarjetaState> = (state: WeatherTarjetaState | undefined, incomingAction: KnownAction): WeatherTarjetaState => {\r\n      \r\n    if (state === undefined) {\r\n        \r\n        let tarjetas = [\r\n            {\r\n                id:1,\r\n                titular: \"Carlos Marcano\",\r\n                numeroTarjeta: \"2626262626262626\",\r\n                fechaExpiracion: \"12/24\",\r\n                cvv:  \"231\"\r\n            },\r\n            {\r\n                id:2,\r\n                titular: \"Maria Gonzales\",\r\n                numeroTarjeta: \"2727272727272727\",\r\n                fechaExpiracion: \"12/23\",\r\n                cvv:  \"233\"\r\n            }\r\n        ]\r\n        \r\n        //console.log(JSON.stringify(tarjetas))\r\n        return { tarjetas: tarjetas };\r\n    }\r\n    //console.log('incomingAction: '+JSON.stringify(incomingAction))\r\n    var action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_WEATHER_FORECASTS':\r\n            return {\r\n                    tarjetas: action.tarjetas\r\n            }\r\n           \r\n            break;\r\n        case 'ADD_TO_CART2':\r\n            return {\r\n                    tarjetas: action.tarjetas\r\n            }\r\n            \r\n            break;\r\n        case 'DELETE_PRODUCT':\r\n            action = incomingAction as DELETE_PRODUCT;\r\n            //let products:Array<Producto>\r\n            let products2 = []\r\n            for(var y in state.tarjetas){\r\n                if(String(state.tarjetas[y].id) !== String(action.id))\r\n                    products2.push(state.tarjetas[y]);\r\n            } \r\n            return  { tarjetas: products2 };\r\n            \r\n\r\n        case 'ADD_TO_CART':\r\n            action = incomingAction as ADD_TO_CART;\r\n            //let products:Array<Producto>\r\n            let tarjetas = []\r\n            for(var x in state.tarjetas){\r\n                tarjetas.push(state.tarjetas[x]);\r\n            }\r\n            tarjetas.push({\r\n                id: action.payload.id,\r\n                titular: action.payload.titular,\r\n                numeroTarjeta:action.payload.numeroTarjeta,\r\n                fechaExpiracion: action.payload.fechaExpiracion,\r\n                cvv: action.payload.cvv\r\n            }); \r\n            return  { tarjetas: tarjetas };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}