{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Bus209\\\\Documents\\\\htdocs\\\\CRUDReact\\\\FBTarjeta\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { reducers } from './';\nexport default function configureStore(history, initialState) {\n  var middleware = [thunk, routerMiddleware(history)];\n  var rootReducer = combineReducers(_objectSpread({}, reducers, {\n    router: connectRouter(history)\n  }));\n  var persistConfig = {\n    key: 'root',\n    storage: storage\n  };\n  var persistedReducer = persistReducer(persistConfig, rootReducer);\n  var enhancers = [];\n  var windowIfDefined = typeof window === 'undefined' ? null : window;\n\n  if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\n    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\n  }\n\n  var store = createStore(persistedReducer, initialState, compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n  var persistor = persistStore(store);\n  return {\n    store: store,\n    persistor: persistor\n  };\n}","map":{"version":3,"sources":["C:/Users/Bus209/Documents/htdocs/CRUDReact/FBTarjeta/ClientApp/src/store/configureStorePersisted.ts"],"names":["persistStore","persistReducer","storage","applyMiddleware","combineReducers","compose","createStore","thunk","connectRouter","routerMiddleware","reducers","configureStore","history","initialState","middleware","rootReducer","router","persistConfig","key","persistedReducer","enhancers","windowIfDefined","window","__REDUX_DEVTOOLS_EXTENSION__","push","store","persistor"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAC/C,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACD,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AAGA,SAA2BC,QAA3B,QAA2C,IAA3C;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAA0CC,YAA1C,EAA2E;AACtF,MAAMC,UAAU,GAAG,CACfP,KADe,EAEfE,gBAAgB,CAACG,OAAD,CAFD,CAAnB;AAKA,MAAMG,WAAW,GAAGX,eAAe,mBAC5BM,QAD4B;AAE/BM,IAAAA,MAAM,EAAER,aAAa,CAACI,OAAD;AAFU,KAAnC;AAKA,MAAMK,aAAa,GAAG;AACtBC,IAAAA,GAAG,EAAE,MADiB;AAEtBhB,IAAAA,OAAO,EAAPA;AAFsB,GAAtB;AAKA,MAAMiB,gBAAgB,GAAGlB,cAAc,CAACgB,aAAD,EAAgBF,WAAhB,CAAvC;AAEA,MAAMK,SAAS,GAAG,EAAlB;AACA,MAAMC,eAAe,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAA/D;;AACA,MAAID,eAAe,IAAIA,eAAe,CAACE,4BAAvC,EAAqE;AACjEH,IAAAA,SAAS,CAACI,IAAV,CAAeH,eAAe,CAACE,4BAAhB,EAAf;AACH;;AAGD,MAAIE,KAAK,GAAGnB,WAAW,CAACa,gBAAD,EACnBN,YADmB,EAEnBR,OAAO,MAAP,UAAQF,eAAe,MAAf,SAAmBW,UAAnB,CAAR,SAA2CM,SAA3C,EAFmB,CAAvB;AAGA,MAAIM,SAAS,GAAG1B,YAAY,CAACyB,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA;AAAT,GAAP;AACH","sourcesContent":["import { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { History } from 'history';\n\nimport { ApplicationState, reducers } from './';\n\nexport default function configureStore(history: History, initialState?: ApplicationState) {\n    const middleware = [\n        thunk,\n        routerMiddleware(history)\n    ];\n\n    const rootReducer = combineReducers({\n        ...reducers,\n        router: connectRouter(history)\n    });\n \n    const persistConfig = {\n    key: 'root',\n    storage,\n    }\n \n    const persistedReducer = persistReducer(persistConfig, rootReducer)\n    \n    const enhancers = [];\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n\n\n    let store = createStore(persistedReducer,\n        initialState,\n        compose(applyMiddleware(...middleware), ...enhancers))\n    let persistor = persistStore(store)\n    return { store, persistor }\n}"]},"metadata":{},"sourceType":"module"}