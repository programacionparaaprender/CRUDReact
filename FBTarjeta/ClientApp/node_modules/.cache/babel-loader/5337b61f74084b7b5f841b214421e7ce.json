{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bus209\\\\Documents\\\\htdocs\\\\CRUDReact\\\\FBTarjeta\\\\ClientApp\\\\src\\\\index.tsx\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStorePersisted';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker'; // Create browser history to use in the Redux store\n\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nvar history = createBrowserHistory({\n  basename: baseUrl\n}); // Get the application-wide store instance, prepopulating with state from the server where available.\n\nvar store = configureStore(history);\n\nvar App2 = function App2() {\n  return React.createElement(ConnectedRouter, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(Provider, {\n  store: store.store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  loading: null,\n  persistor: store.persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}))), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["C:/Users/Bus209/Documents/htdocs/CRUDReact/FBTarjeta/ClientApp/src/index.tsx"],"names":["PersistGate","React","ReactDOM","Provider","ConnectedRouter","createBrowserHistory","configureStore","App","registerServiceWorker","baseUrl","document","getElementsByTagName","getAttribute","history","basename","store","App2","render","persistor","getElementById"],"mappings":";AAAA,OAAO,kCAAP;AACA,SAASA,WAAT,QAA4B,iCAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAAzC,CAAsD,MAAtD,CAAhB;AACA,IAAMC,OAAO,GAAGR,oBAAoB,CAAC;AAAES,EAAAA,QAAQ,EAAEL;AAAZ,CAAD,CAApC,C,CAEA;;AACA,IAAMM,KAAK,GAAGT,cAAc,CAACO,OAAD,CAA5B;;AAIA,IAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,SACI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEH,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKD,CANH;;AAQAX,QAAQ,CAACe,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAK,CAACA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEA,KAAK,CAACG,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,CADJ,EAOIR,QAAQ,CAACS,cAAT,CAAwB,MAAxB,CAPJ;AASAX,qBAAqB","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport configureStore from './store/configureStorePersisted';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Create browser history to use in the Redux store\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\nconst history = createBrowserHistory({ basename: baseUrl });\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst store = configureStore(history);\n\n\n \nconst App2 = () => {\n    return (\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    );\n  };\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App2 />\n        </PersistGate>\n      </Provider>\n    ,\n    document.getElementById('root'));\n\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}